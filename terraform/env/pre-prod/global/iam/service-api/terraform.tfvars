#Global
# project_id       = "personal-project-1-458808"
terraform_owner_email = "tf-sa-17@personal-project-1-458808.iam.gserviceaccount.com"
region                = "us-central1"
project_id = "personal-project-1-458808"

service_account_terraform = {
  role_name       = "tf_role"
  permissions = [
    "artifactregistry.repositories.create",
      "artifactregistry.repositories.delete",
      "artifactregistry.repositories.get",
      "artifactregistry.repositories.getIamPolicy",
      "artifactregistry.repositories.list",
      "artifactregistry.repositories.setIamPolicy",
      "artifactregistry.repositories.update",
      "artifactregistry.repositories.uploadArtifacts",
      "cloudsql.instances.create",
      "cloudsql.instances.delete",
      "cloudsql.instances.get",
      "cloudsql.instances.list",
      "cloudsql.users.delete",
      "compute.firewalls.create",
      "compute.instances.attachDisk",
      "compute.instances.create",
      "compute.instances.createTagBinding",
      "compute.instances.delete",
      "compute.instances.detachDisk",
      "compute.instances.get",
      "container.clusters.create",
      "container.clusters.update",
      "container.clusters.get",
      "container.clusters.delete",
      "container.clusters.list",
      "container.clusters.getIamPolicy",
      "container.clusters.setIamPolicy",
      "container.operations.get",
      "container.operations.list",
      "compute.instances.list",
      "compute.instances.setDeletionProtection",
      "compute.addresses.useInternal",
      "compute.instances.setTags",
      "compute.instances.setIamPolicy",
      "compute.instances.setLabels",
      "compute.instances.setMetadata",
      "compute.instances.setServiceAccount",
      "compute.instances.start",
      "compute.instances.stop",
      "compute.instances.update",
      "compute.instances.use",
      "compute.addresses.deleteInternal",
      "compute.zones.list",
      "compute.zones.get",
      "compute.zoneOperations.get",
      "compute.addresses.createInternal",
      "compute.disks.create",
      "compute.disks.get",
      "compute.disks.delete",
      "compute.disks.createSnapshot",
      "compute.disks.update",
      "compute.disks.use",
      "compute.disks.setLabels",
      "compute.networks.get",
      "resourcemanager.projects.get",
      "storage.buckets.create",
      "storage.buckets.createTagBinding",
      "storage.buckets.delete",
      "storage.buckets.deleteTagBinding",
      "storage.buckets.get",
      "storage.buckets.getIamPolicy",
      "storage.buckets.list",
      "storage.buckets.update",
      "storage.buckets.get",
      "storage.objects.create",
      "storage.objects.get",
      "storage.objects.getIamPolicy",
      "storage.objects.list",
      "storage.objects.setIamPolicy",
      "storage.objects.update",
      "storage.objects.delete",
      "iam.serviceAccounts.actAs",
      "iam.serviceAccounts.get",
      "iam.serviceAccounts.list",
      "logging.logEntries.create",
      "monitoring.metricDescriptors.create",
      "monitoring.metricDescriptors.get",
      "monitoring.metricDescriptors.list",
      "monitoring.monitoredResourceDescriptors.get",
      "monitoring.monitoredResourceDescriptors.list",
      "monitoring.timeSeries.create",
      "certificatemanager.certmapentries.create",
      "certificatemanager.certmapentries.delete",
      "certificatemanager.certmapentries.get",
      "certificatemanager.certmapentries.list",
      "certificatemanager.certmaps.create",
      "certificatemanager.certmaps.delete",
      "certificatemanager.certmaps.list",
      "certificatemanager.certmaps.use",
      "certificatemanager.certs.create",
      "certificatemanager.certs.delete",
      "certificatemanager.certs.get",
      "certificatemanager.certs.list",
      "certificatemanager.certs.use",
      "certificatemanager.dnsauthorizations.create",
      "certificatemanager.dnsauthorizations.delete",
      "certificatemanager.dnsauthorizations.get",
      "certificatemanager.dnsauthorizations.list",
      "certificatemanager.dnsauthorizations.use",
      "certificatemanager.operations.get",
      "serviceusage.services.list",
      "resourcemanager.projects.setIamPolicy",
      "compute.instanceGroupManagers.get",
      "serviceusage.services.enable",
      "compute.networks.create",
      "compute.networks.delete",
      "compute.subnetworks.create",
      "compute.subnetworks.delete",
      "compute.networks.updatePolicy",
      "compute.subnetworks.get",
      "compute.subnetworks.use",
      "compute.subnetworks.list",
      "compute.firewalls.create",
      "compute.firewalls.delete",
      "compute.firewalls.get",
      "compute.firewalls.list",
      "compute.firewalls.update",
      "compute.routers.create",
      "compute.routers.delete",
      "compute.routers.get",
      "compute.routers.list",
      "compute.routers.update",
      "redis.instances.getAuthString",
      "dns.changes.create",
      "dns.managedZones.create",
      "dns.managedZones.delete",
      "dns.managedZones.get",
      "dns.managedZones.list",
      "dns.resourceRecordSets.create",
      "dns.resourceRecordSets.delete",
      "dns.resourceRecordSets.get",
      "dns.resourceRecordSets.list",
      "dns.resourceRecordSets.update",
      "dns.changes.get",
      "compute.addresses.create",
      "compute.addresses.setLabels",
      "compute.addresses.get",
      "compute.addresses.list",
      "compute.addresses.delete",
      "compute.globalAddresses.createInternal",
      "compute.networks.use",
      "compute.globalAddresses.setLabels",
      "compute.globalAddresses.delete",
      "compute.globalAddresses.list",
      "compute.globalAddresses.use",
      "compute.globalAddresses.get",
      "iam.roles.create",
      "iam.roles.delete",
      "iam.roles.get",
      "iam.roles.list",
      "iam.roles.undelete",
      "resourcemanager.projects.getIamPolicy",
      "iam.roles.update",
      "servicenetworking.services.addPeering",
      "servicenetworking.services.get",
      "servicenetworking.services.deleteConnection",
      "iam.serviceAccounts.create",
      "iam.serviceAccounts.createTagBinding",
      "iam.serviceAccounts.delete",
  ]
}

/*****************************************
  Terraform Custom Role Details
*****************************************/

project_services_api = {
  upland_network = {
    project_id                 = "personal-project-1-458808"
    activate_apis              = ["serviceusage.googleapis.com", "cloudresourcemanager.googleapis.com", "iam.googleapis.com", "storage.googleapis.com", "container.googleapis.com", "logging.googleapis.com", "vpcaccess.googleapis.com", "servicenetworking.googleapis.com", "cloudbilling.googleapis.com", "secretmanager.googleapis.com", "connectors.googleapis.com", "artifactregistry.googleapis.com", "compute.googleapis.com", "monitoring.googleapis.com", "servicenetworking.googleapis.com", "networkmanagement.googleapis.com", "certificatemanager.googleapis.com"]
    disable_dependent_services = true
    disable_services_on_destroy = true
  }
}

